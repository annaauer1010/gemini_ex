on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # Docker-Image bauen
    - name: Build the Docker image
      run: docker build -t gemini_ex/gha_gemi .

    # Erstelle ein Ausgabe-Verzeichnis für jede Datei
    - name: Create Output Directories
      run: mkdir -p $GITHUB_WORKSPACE/output/files

    # Verarbeite alle .txt-Dateien im open_jur Ordner
    - name: Docker Run Action for All Files
      run: |
        for file in $GITHUB_WORKSPACE/open_jur/*.txt; do
          # Extrahiere den Dateinamen ohne Erweiterung für die Ausgabe
          filename=$(basename -- "$file")
          filename_without_extension="${filename%.*}"

          # Verarbeite die Datei mit Gemini und speichere das Ergebnis in einem separaten Ordner
          docker run --rm --name gha_gemi --env API_KEY="${{ secrets.API_KEY }}" \
            -v $GITHUB_WORKSPACE/scripts/:/root/scripts/:rw \
            -v $GITHUB_WORKSPACE/prompts/:/root/prompts/:rw \
            -v $GITHUB_WORKSPACE/config/:/root/config/:rw \
            -v $GITHUB_WORKSPACE/open_jur/:/root/open_jur/:rw \
            -v $GITHUB_WORKSPACE/output/files:/root/output/files:rw \
            gemini_ex/gha_gemi R -e 'Sys.setenv("PATH" = paste(Sys.getenv("PATH"),"/usr/local/stata/",sep=":")); source("~/scripts/run.R")' \
            -v $file:/root/open_jur/text.txt  # Mount the current .txt file
            
          # Speichere das Ergebnis für jede Datei in einem separaten Ordner
          mv $GITHUB_WORKSPACE/output/files/text.txt $GITHUB_WORKSPACE/output/files/${filename_without_extension}_result.txt
        done

    # Lade alle Ergebnisse hoch
    - uses: actions/upload-artifact@v4
      with:
        name: gemini_results
        path: ${{ github.workspace }}/output/files/
